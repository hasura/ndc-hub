######### Arg definitions  #########
ARG POSTGRES_PROMPTQL_VERSION=v1.2.7
####################################

######### Postgres PromptQL Connector Builder #########
FROM --platform=amd64 ghcr.io/hasura/ndc-postgres-jdbc:${POSTGRES_PROMPTQL_VERSION} AS postgres-promptql-connector
FROM --platform=amd64 ghcr.io/hasura/ndc-postgres-jdbc-cli:${POSTGRES_PROMPTQL_VERSION} AS postgres-promptql-cli

######### Main Workspace Image #########
FROM --platform=amd64 ubuntu:24.04

ENV HOME=/home/hasura
ENV BIN_PATH=${HOME}/.local/bin
ENV PATH="${BIN_PATH}:${PATH}"
ENV LIB_PATH=${HOME}/.local/lib
ENV XDG_CONFIG_HOME=${HOME}/.config
ENV XDG_DATA_HOME=${HOME}/.local/share
ENV XDG_STATE_HOME=${HOME}/.local/state
ENV XDG_CACHE_HOME=${HOME}/.cache

ENV CONNECTOR_ARTIFACTS_SUB_DIR="connector"
ENV CONNECTOR_PLUGIN_ARTIFACTS_SUB_DIR="plugin"
ENV SHELL=/bin/bash

# Install basic dependencies including Java for the JDBC connector
RUN apt-get update \
    && apt-get upgrade -y \
    && apt-get install -y \
        curl \
        git \
        jq \
        openssl \
        ca-certificates \
        docker.io \
        openjdk-21-jre \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && mkdir -p $HOME \
    && mkdir -p /workspace \
    && mkdir -p $BIN_PATH  \
    && mkdir -p $LIB_PATH  \
    && mkdir -p $XDG_CONFIG_HOME \
    && mkdir -p $XDG_DATA_HOME  \
    && mkdir -p $XDG_STATE_HOME \
    && mkdir -p $XDG_CACHE_HOME \
    && chsh -s /bin/bash

# Install DDN CLI
RUN curl -fsSL https://graphql-engine-cdn.hasura.io/ddn/cli/internal/staging/main/latest/cli-ddn-linux-amd64 -o ${BIN_PATH}/ddn \
    && chmod +x ${BIN_PATH}/ddn

######### Install Postgres PromptQL Connector #########
ARG POSTGRES_PROMPTQL_VERSION

# Copy connector JAR and properties
COPY --from=postgres-promptql-connector /app.jar /app.properties* ${LIB_PATH}/hasura/postgres-promptql/${POSTGRES_PROMPTQL_VERSION}/${CONNECTOR_ARTIFACTS_SUB_DIR}/

# Create entrypoint script for connector
RUN printf '#!/bin/sh\n\
    root_path=%s/hasura/postgres-promptql/%s/%s\n\
    if [ -f "$root_path/app.properties" ]; then\n\
    DEFAULT_OPTS=$(grep "jvm.opts" "$root_path/app.properties" | cut -d'"'"'='"'"' -f2-)\n\
    else\n\
    DEFAULT_OPTS=""\n\
    fi\n\
    exec java $DEFAULT_OPTS $JAVA_OPTS -jar "$root_path/app.jar" "$@"\n'\
    "${LIB_PATH}" "${POSTGRES_PROMPTQL_VERSION}" "${CONNECTOR_ARTIFACTS_SUB_DIR}" \
    > ${LIB_PATH}/hasura/postgres-promptql/${POSTGRES_PROMPTQL_VERSION}/${CONNECTOR_ARTIFACTS_SUB_DIR}/entrypoint.sh \
    && chmod +x ${LIB_PATH}/hasura/postgres-promptql/${POSTGRES_PROMPTQL_VERSION}/${CONNECTOR_ARTIFACTS_SUB_DIR}/entrypoint.sh

# Copy CLI JAR and properties
COPY --from=postgres-promptql-cli /app.jar /app.properties* ${LIB_PATH}/hasura/postgres-promptql/${POSTGRES_PROMPTQL_VERSION}/${CONNECTOR_PLUGIN_ARTIFACTS_SUB_DIR}/

# Create entrypoint script for CLI
RUN printf '#!/bin/sh\n\
    root_path=%s/hasura/postgres-promptql/%s/%s\n\
    if [ -f "$root_path/app.properties" ]; then\n\
    DEFAULT_OPTS=$(grep "jvm.opts" "$root_path/app.properties" | cut -d'"'"'='"'"' -f2-)\n\
    else\n\
    DEFAULT_OPTS=""\n\
    fi\n\
    exec java $DEFAULT_OPTS $JAVA_OPTS -jar "$root_path/app.jar" "$@"\n'\
    "${LIB_PATH}" "${POSTGRES_PROMPTQL_VERSION}" "${CONNECTOR_PLUGIN_ARTIFACTS_SUB_DIR}" \
    > ${LIB_PATH}/hasura/postgres-promptql/${POSTGRES_PROMPTQL_VERSION}/${CONNECTOR_PLUGIN_ARTIFACTS_SUB_DIR}/entrypoint.sh \
    && chmod +x ${LIB_PATH}/hasura/postgres-promptql/${POSTGRES_PROMPTQL_VERSION}/${CONNECTOR_PLUGIN_ARTIFACTS_SUB_DIR}/entrypoint.sh

# Set permissions
RUN chgrp -R 0 ${HOME} /workspace \
    && chmod -R g=u ${HOME} /workspace

WORKDIR /workspace

USER 1001

# Default command to start Docker daemon and keep container running
CMD ["bash", "-c", "dockerd --host=unix:///var/run/docker.sock --host=tcp://0.0.0.0:2376 & while ! docker info >/dev/null 2>&1; do sleep 1; done; echo 'Docker daemon ready'; if [[ -n \"$DDN_WORKSPACE_ACCESS_TOKEN\" ]]; then ddn auth login --access-token \"$DDN_WORKSPACE_ACCESS_TOKEN\" || echo 'DDN login failed'; fi; sleep 3600"]