name: Update Hub DB from GH Registry

on:
  push:
    branches:
      - lyndon/registry-automation # TODO: Remove the branch response
    paths:
      - registry/**


  pull_request:
    types: [opened, synchronize, reopened, closed]
    paths:
      - registry/**

jobs:
  update_registry_db:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2
        with:
          fetch_depth: 1

      - name: Get all changed files and use a comma separator in the output
        id: changed-files
        uses: tj-actions/changed-files@v44
        with:
          json: true
          files: |
            registry/**


      - name: Print out all the changed files
        env:
          ADDED_FILES: ${{ steps.changed-files.outputs.added_files }}
          MODIFIED_FILES: ${{ steps.changed-files.outputs.modified_files }}
          DELETED_FILES: ${{ steps.changed-files.outputs.deleted_files }}
          OUTPUT: ${{ string(steps.changed-files.outputs) }}
        run: |
          echo $OUTPUT > changed_files.txt


      - name: List changed files
        id: list_files
        run: |
          cat changed_files.txt

      # - name: Get the actual changes in the files
      #   run: |
      #     echo "Fetching actual changes ..."
      #     while read -r FILE; do
      #       echo "Changes in $FILE: "
      #       git diff $BASE_SHA $HEAD_SHA -- "$FILE"
      #     done < changed_files.txt
      #   env:
      #     BASE_SHA: ${{ steps.list_files.outputs.base }}
      #     HEAD_SHA: ${{ steps.list_files.outputs.head }}

      # - name: Pseudocode for Next steps
      #   id: next_steps
      #   run: |
      #     echo 'Detect status - added/modified/removed files'
      #     echo 'for each removed connector, remove from registry db'
      #     echo 'for each added connector, create a stub in the registry db'
      #     echo 'for each modified connector:'
      #     echo '  * Download tgz'
      #     echo '  * Re-upload tgz'
      #     echo '  * Extract'
      #     echo '  * Build payload for API'
      #     echo '  * PUT to API (gql)'

      # - name: Setup Go
      #   uses: actions/setup-go@v4
      #   with:
      #     go-version: 1.21.x

      # - name: Run registry automaion program
      #   run: |
      #     cd registry-automation
      #     go run main.go ci
